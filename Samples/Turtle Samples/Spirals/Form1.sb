Math.UseRadianAngles = False

Sub ChangeButtonsState(isEnabled)
   ForEach _button In Me.Controls
      _button.Enabled = isEnabled
   Next
EndSub

' ------------------------------------------------
Sub BtnSpiral_OnClick()
   ChangeButtonsState(False)
   Turtle.UseAnimation = True
   Turtle.Speed = 25
   GW.Clear()
   
   GW.AutoShow = False
   For i = 1 To 100 Step 3
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      Turtle.Move(2 * i)
      Turtle.Turn(60)
   Next
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


Sub Initialize(x, y)
   ChangeButtonsState(False)
   Turtle.Speed = 50
   Turtle.UseAnimation = False
   GW.Clear()
   GW.PenColor = Colors.Blue
   Turtle.PenUp()
   Turtle.MoveTo(x, y)
   Turtle.PenDown()
   GW.AutoShow = False
EndSub

' ------------------------------------------------
Sub BtnRadialSpiral_OnClick()
   w = GraphicsWindow.Width / 2
   h = GraphicsWindow.Height / 2
   Initialize(w, h)
   angle = 0
   _step = 0.1
   size = 1
   
   While size < 200
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      x = w + size * Math.Cos(angle)
      y = h + size * Math.Sin(angle)
      Turtle.MoveTo(x, y)
      
      angle = angle + 1
      size = size + _step
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnSpring_OnClick()
   w = GraphicsWindow.Width / 2
   h = GraphicsWindow.Height / 2
   Initialize(w, h)
   angle = 0
   _step = 0.1
   size = 1
   waveAmplitude = 5
   waveFrequency = 50
   
   GW.AutoShow = False
   While size < 250
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      a = angle * waveFrequency
      x = w + (size + waveAmplitude * Math.Sin(a)) * Math.Cos(angle)
      y = h + (size + waveAmplitude * Math.Sin(a)) * Math.Sin(angle)
      Turtle.MoveTo(x, y)
      
      angle = angle + 1
      size = size + _step
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnFlower_OnClick()
   w = GraphicsWindow.Width / 2
   h = GraphicsWindow.Height / 2
   Initialize(w, h)
   angle = 0
   _step = 0.1
   size = 1
   waveAmplitude = 5
   waveFrequency = 10
   
   While size < 200
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      GW.PenColor = GW.GetRandomColor()
      a = angle * waveFrequency
      r = size * (0.5 + Math.Cos(angle.Degrees)) + waveAmplitude * a.Sin
      x = w + r * a.Cos
      y = h + r * a.Sin
      Turtle.MoveTo(x, y)
      
      angle = angle + 1
      size = size + _step
      Turtle.Move(5)
      Turtle.Turn(30)
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnSpring2_OnClick()
   w = GraphicsWindow.Width / 2
   h = GraphicsWindow.Height / 2
   Initialize(w, h)
   angle = 0
   _step = 0.1
   size = 5
   waveAmplitude = 5
   waveFrequency = 50
   
   While size < 250
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      a = angle * waveFrequency
      x = w + (size + waveAmplitude * Math.Sin(a)) * Math.Cos(angle)
      y = h + (size + waveAmplitude * Math.Sin(a)) * Math.Sin(angle)
      Turtle.MoveTo(x, y)
      angle = angle + 1
      size = size + _step
      Turtle.Move(10)
      Turtle.Turn(5)
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnWavySpiral_OnClick()
   w = GraphicsWindow.Width / 2
   h = GraphicsWindow.Height / 2
   Initialize(w, h)
   angle = 0
   _step = 0.1
   size = 1
   thickness = 1
   maxThickness = 10
   thicknessStep = 0.1
   
   While size < 250
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      GraphicsWindow.PenWidth = thickness
      x = w + size * Math.Cos(angle)
      y = h + size * Math.Sin(angle)
      Turtle.MoveTo(x, y)
      
      angle = angle + 1
      size = size + _step
      thickness = maxThickness * Math.Abs(Math.Sin(angle * 10))
      
      If thickness < 1 Then
         thickness = 1
      EndIf
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnSpring3_OnClick()
   w = GW.Width / 2
   h = GW.Height / 2
   Initialize(w, h)
   angle = 0
   _step = 0.1
   size = 1
   thickness = 1
   maxThickness = 10
   thicknessStep = 0.1
   
   While size < 250
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      GraphicsWindow.PenWidth = thickness
      x = w + size * Math.Cos(angle)
      y = h + size * Math.Sin(angle)
      Turtle.MoveTo(x, y)
      
      angle = angle + 1
      size = size + _step
      thickness = maxThickness * Math.Abs(Math.Sin(angle * 10))
      
      If thickness < 1 Then
         thickness = 1
      EndIf
      
      Turtle.Move(10)
      Turtle.Turn(5)
   Wend
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnSpiralRays_OnClick()
   ChangeButtonsState(False)
   GW.Clear()
   
   GW.AutoShow = False
   For a = 0 To 1440 + 270 Step 3
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      GW.PenWidth = 0.8 + Math.NaturalLog(a) / 5
      GW.PenColor = Colors.Blue
      w = a / 240 * Math.Cos(a * 5.5) * 5
      r = 30 + 8 * a / 45
      GW.DrawLine(
         420 + (r + w) * Math.Cos(a),
         Math.Sin(a) * (r + w) + 320,
         420 + (r - w) * Math.Cos(a),
         Math.Sin(a) * (r - w) + 320
      )
   Next
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub


' ------------------------------------------------
Sub BtnCircularSpiral_OnClick()
   ChangeButtonsState(False)
   GW.Clear()
   GW.AutoShow = False
   Initialize(GW.Width / 2 - 100, GW.Height / 2 - 50)
   d100 = 4
   
   For x = 1 To 100
      If GW.IsClosed Then
         ExitLoop
      EndIf
      
      ox = Turtle.X
      oy = Turtle.Y
      oa = Turtle.Angle
      For r = 1 To 100
         Turtle.Move(d100)
         Turtle.Turn(3.6)
      Next
      Turtle.X = ox
      Turtle.Y = oy
      Turtle.Angle = oa
      
      d100 = d100 * 0.985
      ta = Turtle.Angle
      Turtle.Turn(-37.5)
      Turtle.PenUp()
      Turtle.Move(20 + x / 10)
      Turtle.Angle = ta + 12
      Turtle.PenDown()
   Next
   GW.AutoShow = True
   ChangeButtonsState(True)
EndSub
