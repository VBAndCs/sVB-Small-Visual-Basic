' Car Game
' Created with Small Visual Baisic (sVB)
' By Mohammad Hamdy Ghanm

screenHeight = Me.Height
screenWidth = Me.Width - 25


Cars = ""
CarsCount = 0
MyCarSpeed = 0

' Car parameters
'----------------------------
c_Speed = 1
c_Steps = 2
c_RelativeSpeed = 3
c_XDisplacement = 4
c_YDisplacement = 5
c_Label = 6
c_top = 7
c_Left = 8
c_Far = 9
c_OldSpeed = 10
c_MaxSpeed = 11
'-----------------------------

MoveDirection = 0
Direction_Up = 1
Direction_Down = 2
Direction_Left = 3
Direction_Right = 4


StartMove = False
EndGame = False
Braking = False
a = 0.2

MyCar = CreateCar("MyCar", 255, 30, Me.Width/2 - 25, Me.Height - 250, "Cars\0.gif")
Cars[0] = MyCar

CreateEnamyCars()

BlockCount = 9
BlockDistance = 0
BlockFraction = 0
LeftBlocks = ""
RightBlocks = ""
CreateTracks()

Timer.Interval = 1
Timer.Tick = Timer_Tick

'---------------------------------------------------------------
Function CreateCar(name, maxSpeed, speed, left, top, image)
   car[c_MaxSpeed] = Maxspeed
   car[c_Speed] = speed
   car[c_OldSpeed] = -1
   car[c_Steps] = 1
   car[c_RelativeSpeed] = 0
   car[c_YDisplacement] = 0
   car[c_Far] = 0
   
   carLabel = Me.AddLabel(name, left, top, 75, 150)
   carLabel.Image = image
   car[c_top] = top
   car[c_Left] = left
   car[c_Label] = carLabel
   Return car
EndFunction

'---------------------------------------------------------------
Sub CreateEnamyCars()
   For i = 1 To 11
      maxSpeed = 120 + 10 * Math.GetRandomNumber(13)
      speed = Math.GetRandomNumber(maxSpeed)
      left = screenWidth / 13 * i
      top = i * Math.GetRandomNumber(screenHeight / 2)
      if Math.GetRandomNumber(2) = 1 Then
         top = -top
      EndIf
      
      img = "Cars\" + i + ".png"
      CarsCount = CarsCount + 1
      car = CreateCar("EnemyCar" + i, maxSpeed, speed, left, top, img)
      Cars[CarsCount] = car
      
      If i = 4 Then
         carLabel = car[c_Label]
         carLabel.Width = 85
         carLabel.Height = 175
      EndIf
   Next
EndSub

'---------------------------------------------------------------------

Sub MoveMyCar
   If StartMove Then
      myCarLabel = MyCar[c_Label]
      if MoveDirection = Direction_Up Then
         If MyCarSpeed < 256 - a Then
            MyCarSpeed = MyCarSpeed + a
         Else
            MyCarSpeed = 255
         EndIf
         Me.Text = MyCarSpeed
         
      ElseIf MoveDirection = Direction_Down Then
         If MyCarSpeed >= a Then
            MyCarSpeed = MyCarSpeed - a
         Else
            MyCarSpeed = 0
         EndIf
         Me.Text = MyCarSpeed
         
         If Braking Then
            a = a + 0.01
         Else
            a = 0.2
         EndIf
         
         
      ElseIf MoveDirection = Direction_Right Then
         myCarLabel.Left = myCarLabel.Left + Math.Min(MyCarSpeed / 100, 1)
         
      ElseIf MoveDirection = Direction_Left Then
         myCarLabel.Left = myCarLabel.Left - Math.Min(MyCarSpeed / 100, 1)
      EndIf
   EndIf
EndSub


'---------------------------------------------------------------
Function MoveCar(i)
   car = Cars[i]
   steps = car[c_Steps]
   If steps > car[c_YDisplacement] Then
      Return False
   EndIf
   
   carLabel = car[c_Label]
   top = car[c_top]
   left = car[c_Left]
   xDisplacement = car[c_XDisplacement]
   speed = car[c_Speed]
   oldSpeed = Math.Max(car[c_OldSpeed], speed)
   maxSpeed = car[c_MaxSpeed]
   
   If car[c_RelativeSpeed] < 0 Then
      top = top + 2
      If top > 2000 Then
         top = 1500 - top
         oldSpeed = oldSpeed + 30
         If oldSpeed > maxSpeed Then
            oldSpeed = 0
         EndIf
      EndIf
      
   Else
      top = top - 2
      
      If top < -500 And speed > 0 Then
         far = Math.Floor(top / 1000)
         
         If far < car[c_Far] Then
            car[c_Far] = far
            oldSpeed = oldSpeed - 30
            If oldSpeed < 0 Then
               oldSpeed = 100 - Speed
            EndIf
         EndIf
      EndIf
   EndIf
   
   
   If xDisplacement > 0 Then
      left = left + 0.5
      w = screenWidth - carLabel.Width
      If left > W Then
         left = W
         xDisplacement = 0
      Else
         xDisplacement = Math.Max(0, xDisplacement - 0.5)
      EndIf
      
      
   ElseIf xDisplacement < 0 Then
      left = left - 0.5
      If left < 30 Then
         left = 30
         xDisplacement = 0
      Else
         xDisplacement = Math.Min(0, xDisplacement + 0.5)
      endif
      
   ElseIf oldSpeed > speed Then
      Speed = Math.Min(maxSpeed, Speed + 1)
   ElseIf oldSpeed < speed Then
      Speed = Math.Max(0, Speed - 1)
   Else
      car[c_OldSpeed] = -1
   EndIf
   
   
   carHeight = carLabel.Height
   If top < -carHeight Or top > screenHeight Then
      pos = carLabel.Top
      If pos >= -carHeight and pos <= screenHeight Then
         carLabel.Top = top
         carLabel.Left = left
      EndIf
   Else
      carLabel.Top = top
      carLabel.Left = left
   EndIf
   
   
   car[c_Steps] = steps + 2
   car[c_Speed] = speed
   car[c_top] = top
   car[c_Left] = left
   car[c_XDisplacement] = xDisplacement
   Cars[i] = car
   Return True
EndFunction

'---------------------------------------------------------------------
Sub MoveCars()
   r = Math.GetRandomNumber(CarsCount * 10) / 10
   negative = Math.GetRandomNumber(100) > 50
   
   For i = 1 to CarsCount
      car = Cars[i]
      s = car[c_Speed] - MyCarSpeed
      car[c_RelativeSpeed] = s
      car[c_YDisplacement] = Math.Abs(s / 5)
      If i = r Then
         If negative Then
            d = -5
         Else
            d = 5
         EndIf
         car[c_XDisplacement] = d
      EndIf
      
      top = car[c_top]
      car[c_Steps] = 2
      Cars[i] = car
   Next
   
   While EndGame = False
      MoveTracks()
      MoveMyCar()
      
      StillMoving = False
      For i = 1 to CarsCount
         If MoveCar(i) Then
            StillMoving = True
         EndIf
         AvoidCollisions(i)
      Next
      
      If StillMoving = False Then
         ExitLoop
      EndIf
   Wend
EndSub

'---------------------------------------------------------------------

Sub Timer_Tick
   Timer.Pause()
   MoveCars()
   Timer.Resume()
EndSub

'---------------------------------------------------------------------
Sub EndMove()
   StartMove = False
   Braking = False
   a = 0.2
EndSub

'---------------------------------------------------------------------

Sub SpeedUp()
   MoveDirection = Direction_Up
   StartMove = True
EndSub

'---------------------------------------------------------------------
Sub SpeedDown()
   MoveDirection = Direction_Down
   StartMove = True
EndSub

'---------------------------------------------------------------------
Sub MoveRight()
   MoveDirection = Direction_Right
   StartMove = True
EndSub

'---------------------------------------------------------------------
Sub MoveLeft()
   MoveDirection = Direction_Left
   StartMove = True
EndSub


'---------------------------------------------------------------------
Sub Brake()
   Braking = true
   MoveDirection = Direction_Down
   StartMove = True
EndSub

'---------------------------------------------------------------------
Sub Form1_OnKeyDown()
   If Event.LastKey = Keys.Up Then
      SpeedUp()
   elseIf Event.LastKey = Keys.Down Then
      SpeedDown()
   elseIf Event.LastKey = Keys.Left Then
      MoveLeft()
   elseIf Event.LastKey = Keys.Right Then
      MoveRight()
   elseIf Event.LastKey = Keys.Space Then
      Brake()
   EndIf
   
   event.Handled = True
EndSub

'-------------------------------------------------------------------------------
gameKeys = {Keys.Up, Keys.Down, Keys.Left, Keys.Right, Keys.Space}

Sub Form1_OnKeyUp
   Key = Event.LastKey
   For i = 1 To Array.GetItemCount(gameKeys)
      If Key = gameKeys[i] Then
         EndMove()
         Return
      EndIf
      
   Next
EndSub


'------------------------------------------------
Sub Form1_OnClosing
   Timer.Pause()
   EndGame = True
   MyCarSpeed = 0
   CarsCount = 0
   Cars = ""
   MyCar = ""
EndSub


'------------------------------------------------
Sub CreateTracks()
   leftTrackLabel = Me.AddLabel("leftTrack", 0, 0, 20, Me.Height)
   leftTrackLabel.BackColor = Color.White
   
   x2 = Me.Width - 20
   rightTrackLabel = Me.AddLabel("rightTrack", x2, 0, 20, Me.Height)
   rightTrackLabel.BackColor = Color.White
   
   BlockDistance = Me.Height / (BlockCount - 1)
   BlockFraction = Me.Height - BlockDistance * (BlockCount - 1)
   For i = 1 To BlockCount
      h = (i - 2) * BlockDistance
      LeftBlocks[i] = CreateBlock(0, h, "Left" + i)
      RightBlocks[i] = CreateBlock(x2, h, "Right" + i)
   Next
EndSub


'------------------------------------------------
Function CreateBlock(left, top, n)
   blockLabel = Me.AddLabel("blockLabel" + n, left, top, 20, 20)
   blockLabel.BackColor = Color.Black
   Return blockLabel
EndFunction


currentBlock = 0
'------------------------------------------------
Sub MoveTracks()
   y = MyCarSpeed / 5
   
   
   blockLabel = LeftBlocks[currentBlock]
   top = blockLabel.Top + y
   h = top - Me.Height
   If h >= 0 Then
      top = - BlockDistance + h + BlockFraction
   EndIf
   
   blockLabel.Top = top
   
   
   blockLabel = RightBlocks[currentBlock]
   blockLabel.Top = top
   
   
   if currentBlock = BlockCount Then
      currentBlock = 1
   Else
      currentBlock = currentBlock + 1
   EndIf
EndSub


'------------------------------------------------
Function AvoidCollisions(n)
   car = Cars[n]
   carSpeed = car[c_Speed]
   If carSpeed = 0 Then
      Return False
   EndIf
   
   carLabel = car[c_Label]
   carTop = car[c_top]
   carBottom = carTop + carLabel.Height
   carLeft = car[c_Left]
   carRight = carLeft + carLabel.Width
   oldSpeed = car[c_OldSpeed]
   
   For i = 1 To CarsCount
      If i = n Then
         ContinueLoop
      EndIf
      
      car2 = Cars[i]
      car2Speed = car2[c_Speed]
      rDisplacement = 3 * (carSpeed - car2Speed)
      
      car2Label = car2[c_Label]
      car2Top = car2[c_top]
      car2Bottom = car2Top + car2Label.Height
      
      if carTop >= car2Top And carTop - car2Bottom <= rDisplacement Then
         ' SpeedUp collision
         car2Left = car2[c_Left]
         car2Right = car2Left + car2Label.Width
         
         colision = False
         If carLeft <= car2Right Then
            If carRight >= car2Left Or carLeft >= car2Left Then
               colision = True
            EndIf
            
         EndIf
         
         If colision Then
            If carTop - car2Bottom < 5 Then
               If oldSpeed = -1 Then
                  oldSpeed = carSpeed
               EndIf
               
               carSpeed = Math.Max(0, car2Speed - 20)
            EndIf
            
            L1 = carRight - car2Left + 10
            L2 = car2Right - carLeft + 10
            If (L1 < l2 And carLeft - L1 > 35) Or carRight + L2 >= screenWidth Then
               car[c_XDisplacement] = -L1
            Else
               car[c_XDisplacement] = L2
            EndIf
            
            car[c_OldSpeed] = oldSpeed
            car[c_Speed] = carSpeed
            Cars[n] = car
            
            Return True
         EndIf
         
      EndIf
      
      'EndIf
   Next
   
   
   
   x = Math.GetRandomNumber(100)
   
   If x = 50 Then
      car[c_OldSpeed] = Math.Max(0, carSpeed - 10)
      Cars[n] = car
   elseIf car[c_OldSpeed] = -1 Then
      car[c_OldSpeed] = car[c_MaxSpeed]
      Cars[n] = car
   EndIf
   
   Return False
EndFunction

