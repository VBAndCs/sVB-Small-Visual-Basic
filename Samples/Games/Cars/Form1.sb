' Car Game
' Created with Small Visual Baisic (sVB)
' By Mohammad Hamdy Ghanm

ScreenHeight = Me.Height
ScreenWidth = Me.Width - 25

Cars = {}
CarsCount = 0
MyCarSpeed = 80

MoveDirection = 0
Direction_Up = 1
Direction_Down = 2
Direction_Left = 3
Direction_Right = 4

StartMove = False
EndGame = False
Braking = False
A = 0.5

MyCar = CreateCar(
   "MyCar",   		' name
   300,        		' maxSpeed
   MyCarSpeed,          ' speed
   Me.Width / 2 - 25,  ' left
   Me.Height - 250,  ' top
   "Cars\0.gif"      ' image
)

Cars[0] = MyCar

CreateEnamyCars()

BlockCount = 9
BlockDistance = 0
BlockFraction = 0
LeftBlocks = ""
RightBlocks = ""
CreateTracks()

Timer.Interval = 1
Timer.Tick = Timer_Tick

Function CreateCar(
      name,  	  ' #String: the name of the car
      maxSpeed, ' #double
      speed,
      left,	' x-pos of the car
      top,		' y-pos of the car
      image	' the path of the car image file
   ) ' The car object
   
   car!MaxSpeed = maxSpeed
   car!Speed = speed
   car!OldSpeed = -1
   car!Steps = 1
   car!RelativeSpeed = 0
   car!YDisplacement = 0
   car!Far = 0
   
   carLabel = Me.AddLabel(name, left, top, 75, 150)
   carLabel.Image = image
   car!Top = top
   car!Left = left
   car!Label = carLabel
   Return car
EndFunction

Sub CreateEnamyCars()
   For i = 1 To 11
      maxSpeed = 120 + 10 * Math.GetRandomNumber(13)
      speed = Math.GetRandomNumber(maxSpeed)
      left = ScreenWidth / 13 * i
      top = i * Math.GetRandomNumber(ScreenHeight / 2)
      If Math.GetRandomNumber(2) = 1 Then
         top = -top
      EndIf
      
      img = "Cars\" + i + ".png"
      CarsCount = CarsCount + 1
      enamyCar = CreateCar("EnemyCar" + i,
         maxSpeed, speed,
         left, top, img
      )
      Cars[CarsCount] = enamyCar
      
      If i = 4 Then
         carLabel = enamyCar!Label
         carLabel.Width = 85
         carLabel.Height = 175
      EndIf
   Next
EndSub

Sub MoveMyCar()
   If StartMove Then
      myCarLabel = MyCar!Label
      If MoveDirection = Direction_Up Then
         If MyCarSpeed < MyCar!MaxSpeed - A Then
            MyCarSpeed = MyCarSpeed + A
         Else
            MyCarSpeed = MyCar!MaxSpeed
         EndIf
         Me.Text = MyCarSpeed
         
      ElseIf MoveDirection = Direction_Down Then
         If MyCarSpeed >= A Then
            MyCarSpeed = MyCarSpeed - A
         Else
            MyCarSpeed = 0
         EndIf
         Me.Text = MyCarSpeed
         
         If Braking Then
            A = A + 0.01
         Else
            A = 0.5
         EndIf
         
      ElseIf MoveDirection = Direction_Right Then
         myCarLabel.Left = myCarLabel.Left _
            + Math.Min(MyCarSpeed / 100, 1)
         
      ElseIf MoveDirection = Direction_Left Then
         myCarLabel.Left = myCarLabel.Left _
            - Math.Min(MyCarSpeed / 100, 1)
      EndIf
   EndIf
EndSub


Function MoveCar(i)
   car = Cars[i]
   steps = car!Steps
   If steps > car!YDisplacement Then
      Return False
   EndIf
   
   carLabel = car!Label
   top = car!Top
   left = car!Left
   xDisplacement = car!XDisplacement
   speed = car!Speed
   oldSpeed = Math.Max(car!OldSpeed, speed)
   maxSpeed = car!MaxSpeed
   
   If car!RelativeSpeed < 0 Then
      top = top + 2
      If top > 2000 Then
         top = 1500 - top
         oldSpeed = oldSpeed + 30
         If oldSpeed > maxSpeed Then
            oldSpeed = 0
         EndIf
      EndIf
      
   Else
      top = top - 2
      
      If top < -500 And speed > 0 Then
         far = Math.Floor(top / 1000)
         
         If far < car!Far Then
            car!Far = far
            oldSpeed = oldSpeed - 30
            If oldSpeed < 0 Then
               oldSpeed = 100 - speed
            EndIf
         EndIf
      EndIf
   EndIf
   
   If xDisplacement > 0 Then
      left = left + 0.5
      w = ScreenWidth - carLabel.Width
      If left > w Then
         left = w
         xDisplacement = 0
      Else
         xDisplacement = Math.Max(0, xDisplacement - 0.5)
      EndIf
      
   ElseIf xDisplacement < 0 Then
      left = left - 0.5
      If left < 30 Then
         left = 30
         xDisplacement = 0
      Else
         xDisplacement = Math.Min(0, xDisplacement + 0.5)
      EndIf
      
   ElseIf oldSpeed > speed Then
      speed = Math.Min(maxSpeed, speed + 1)
   ElseIf oldSpeed < speed Then
      speed = Math.Max(0, speed - 1)
   Else
      car!OldSpeed = -1
   EndIf
   
   carHeight = carLabel.Height
   If top < -carHeight Or top > ScreenHeight Then
      pos = carLabel.Top
      If pos >= -carHeight And pos <= ScreenHeight Then
         carLabel.Top = top
         carLabel.Left = left
      EndIf
   Else
      carLabel.Top = top
      carLabel.Left = left
   EndIf
   
   car!Steps = steps + 2
   car!Speed = speed
   car!Top = top
   car!Left = left
   car!XDisplacement = xDisplacement
   Cars[i] = car
   Return True
EndFunction

Sub MoveCars()
   r = Math.GetRandomNumber(CarsCount * 10) / 10
   negative = Math.GetRandomNumber(100) > 50
   
   For i = 1 To CarsCount
      car = Cars[i]
      s = car!Speed - MyCarSpeed
      car!RelativeSpeed = s
      car!YDisplacement = Math.Abs(s / 5)
      If i = r Then
         If negative Then
            d = -5
         Else
            d = 5
         EndIf
         car!XDisplacement = d
      EndIf
      
      top = car!Top
      car!Steps = 2
      Cars[i] = car
   Next
   
   While EndGame = False
      MoveTracks()
      MoveMyCar()
      
      stillMoving = False
      For i = 1 To CarsCount
         If MoveCar(i) Then
            stillMoving = True
         EndIf
         AvoidCollisions(i)
      Next
      
      If stillMoving = False Then
         ExitLoop
      EndIf
   Wend
EndSub

Sub Timer_Tick()
   Timer.Pause()
   MoveCars()
   Timer.Resume()
EndSub

Sub EndMove()
   StartMove = False
   Braking = False
   A = 0.5
EndSub

Sub SpeedUp()
   MoveDirection = Direction_Up
   StartMove = True
EndSub

Sub SpeedDown()
   MoveDirection = Direction_Down
   StartMove = True
EndSub

Sub MoveRight()
   MoveDirection = Direction_Right
   StartMove = True
EndSub

Sub MoveLeft()
   MoveDirection = Direction_Left
   StartMove = True
EndSub

Sub Brake()
   Braking = True
   MoveDirection = Direction_Down
   StartMove = True
EndSub

Sub Form_OnKeyDown()
   If StartMove Or Braking Then
      Return
   EndIf
   
   If Event.LastKey = Keys.Up Then
      If Keyboard.CtrlPressed Then
         A = 1
      EndIf
      SpeedUp()
      
   ElseIf Event.LastKey = Keys.Down Then
      If Keyboard.CtrlPressed Then
         A = 1
      EndIf
      SpeedDown()
      
   ElseIf Event.LastKey = Keys.Left Then
      MoveLeft()
      
   ElseIf Event.LastKey = Keys.Right Then
      MoveRight()
      
   ElseIf Event.LastKey = Keys.Space Then
      Brake()
   EndIf
   
   Event.Handled = True
EndSub

' -------------------------------------------------------------------------------
GameKeys = {
   Keys.Up,
   Keys.Down,
   Keys.Left,
   Keys.Right,
   Keys.Space
}

Sub Form_OnKeyUp()
   key = Event.LastKey
   For i = 1 To GameKeys.Count
      If key = GameKeys[i] Then
         EndMove()
         Return
      EndIf
   Next
EndSub

Sub Form1_OnClosing()
   Timer.Pause()
   EndGame = True
   MyCarSpeed = 0
   CarsCount = 0
   Cars = ""
   MyCar = ""
EndSub

Sub CreateTracks()
   leftTrackLabel = Me.AddLabel("leftTrack", 0, 0, 20, Me.Height)
   leftTrackLabel.BackColor = Colors.White
   
   x2 = Me.Width - 20
   rightTrackLabel = Me.AddLabel("rightTrack", x2, 0, 20, Me.Height)
   rightTrackLabel.BackColor = Colors.White
   
   BlockDistance = Me.Height / (BlockCount - 1)
   BlockFraction = Me.Height - BlockDistance * (BlockCount - 1)
   For i = 1 To BlockCount
      h = (i - 2) * BlockDistance
      LeftBlocks[i] = CreateBlock(0, h, "Left" + i)
      RightBlocks[i] = CreateBlock(x2, h, "Right" + i)
   Next
EndSub

Function CreateBlock(left, top, n)
   blockLabel = Me.AddLabel("blockLabel" + n, left, top, 20, 20)
   blockLabel.BackColor = Colors.Black
   Return blockLabel
EndFunction


CurrentBlock = 1
Sub MoveTracks()
   y = MyCarSpeed / 5
   blockLabel = LeftBlocks[CurrentBlock]
   top = blockLabel.Top + y
   h = top - Me.Height
   If h >= 0 Then
      top = -BlockDistance + h + BlockFraction
   EndIf
   
   blockLabel.Top = top
   blockLabel = RightBlocks[CurrentBlock]
   blockLabel.Top = top
   
   If CurrentBlock = BlockCount Then
      CurrentBlock = 1
   Else
      CurrentBlock = CurrentBlock + 1
   EndIf
EndSub

Function AvoidCollisions(n)
   car = Cars[n]
   carSpeed = car!Speed
   If carSpeed = 0 Then
      Return False
   EndIf
   
   carLabel = car!Label
   carTop = car!Top
   carBottom = carTop + carLabel.Height
   carLeft = car!Left
   carRight = carLeft + carLabel.Width
   oldSpeed = car!OldSpeed
   
   For i = 1 To CarsCount
      If i = n Then
         ContinueLoop
      EndIf
      
      car2 = Cars[i]
      car2Speed = car2!Speed
      rDisplacement = 3 * (carSpeed - car2Speed)
      
      car2Label = car2!Label
      car2Top = car2!Top
      car2Bottom = car2Top + car2Label.Height
      
      car2Left = car2!Left
      car2Right = car2Left + car2Label.Width
      
      If carLeft > car2Right Or carRight < car2Left Then
         ContinueLoop
      EndIf
      
      If carTop >= car2Top And _
            carTop - car2Bottom <= rDisplacement Then
         ' SpeedUp collision
         
         If carTop - car2Bottom < 5 Then
            If oldSpeed = -1 Then
               oldSpeed = carSpeed
            EndIf
            
            carSpeed = Math.Max(0, car2Speed - 20)
         EndIf
         
         l1 = carRight - car2Left + 10
         l2 = car2Right - carLeft + 10
         If (l1 < l2 And carLeft - l1 > 35) Or carRight + l2 >= ScreenWidth Then
            car!XDisplacement = -l1
         Else
            car!XDisplacement = l2
         EndIf
         
         car!OldSpeed = oldSpeed
         car!Speed = carSpeed
         Cars[n] = car
         
         Return True
      EndIf
   Next
   
   x = Math.GetRandomNumber(100)
   
   If x = 50 Then
      car!OldSpeed = Math.Max(0, carSpeed - 10)
      Cars[n] = car
   ElseIf car!OldSpeed = -1 Then
      car!OldSpeed = car!MaxSpeed
      Cars[n] = car
   EndIf
   
   Return False
EndFunction
