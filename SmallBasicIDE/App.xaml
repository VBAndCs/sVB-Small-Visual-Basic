<Application x:Class="Microsoft.SmallVisualBasic.App" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:local="clr-namespace:Microsoft.SmallVisualBasic"
             xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             xmlns:doc="clr-namespace:Microsoft.SmallVisualBasic.Documents" 
             xmlns:sb="clr-namespace:Microsoft.SmallVisualBasic" 
             xmlns:editor="clr-namespace:Microsoft.Windows.Controls;assembly=ToolFramework" 
             xmlns:sbshell="clr-namespace:Microsoft.SmallVisualBasic.Shell">

    <Application.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="{DataTemplateKey {x:Type doc:TextDocument}}" DataType="{x:Type doc:TextDocument}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" MaxHeight="200" />
                    </Grid.RowDefinitions>
                    <ContentControl Content="{Binding Path=EditorControl}">
                        <FrameworkElement.ContextMenu>
                            <ContextMenu Name="CntxMenu" Opened="CntxMenu_Opened" Closed="CntxMenu_Closed">
                                <MenuItem Command="{x:Static sb:MainWindow.CutCommand}" />
                                <MenuItem Command="{x:Static sb:MainWindow.CopyCommand}" />
                                <MenuItem Command="{x:Static sb:MainWindow.PasteCommand}" />
                                <Separator />
                                <MenuItem Command="{x:Static sb:MainWindow.FindCommand}" />
                                <MenuItem Command="{x:Static sb:MainWindow.InsertFilePathCommand}" />
                                <Separator />
                                <MenuItem Command="{x:Static sb:MainWindow.FormatCommand}" />
                            </ContextMenu>
                        </FrameworkElement.ContextMenu>
                    </ContentControl>
                    <ContentControl Grid.Row="1" Content="{Binding Path=ErrorListControl}" />
                </Grid>
            </DataTemplate>

            <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="{x:Type RepeatButton}">
                <Border Background="#00FFFFFF" />
            </ControlTemplate>

            <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="{x:Type Thumb}">
                <Border Name="Border" CornerRadius="4" BorderBrush="#cccccc" BorderThickness="1">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="#FFFFFF" />
                            <GradientStop Offset="0.5" Color="#E0E0E0" />
                            <GradientStop Offset="1" Color="#F6F6F6" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Thumb.IsDragging" Value="True">
                        <Setter TargetName="Border" Property="UIElement.BitmapEffect">
                            <Setter.Value>
                                <OuterGlowBitmapEffect GlowColor="#8dc0de" GlowSize="8" Opacity="0.5" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="{x:Type Thumb}">
                <Border Name="Border" CornerRadius="4" BorderBrush="#cccccc" BorderThickness="1">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Offset="0" Color="#FFFFFF" />
                            <GradientStop Offset="0.5" Color="#E0E0E0" />
                            <GradientStop Offset="1" Color="#F6F6F6" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Thumb.IsDragging" Value="True">
                        <Setter TargetName="Border" Property="UIElement.BitmapEffect">
                            <Setter.Value>
                                <OuterGlowBitmapEffect GlowColor="#8dc0de" GlowSize="8" Opacity="0.5" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            
            <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False" Margin="8,0,0,0">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageLeftCommand" Focusable="False" Template="{StaticResource RepeatButtonTemplate}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageRightCommand" Focusable="False" Template="{StaticResource RepeatButtonTemplate}" />
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb MinWidth="10" Margin="-8,0,0,0" Template="{StaticResource HorizontalThumbTemplate}" />
                        </Track.Thumb>
                    </Track>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True" Margin="0,8,0,0">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageUpCommand" Focusable="False" Template="{StaticResource RepeatButtonTemplate}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageDownCommand" Focusable="False" Template="{StaticResource RepeatButtonTemplate}" />
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb MinHeight="10" Margin="0,-8,0,0" Template="{StaticResource VerticalThumbTemplate}" />
                        </Track.Thumb>
                    </Track>
                </Grid>
            </ControlTemplate>

            <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                <Style.Triggers>
                    <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="Height" Value="12" />
                        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                    </Trigger>
                    <Trigger Property="ScrollBar.Orientation" Value="Vertical">
                        <Setter Property="Width" Value="12" />
                        <Setter Property="Height" Value="Auto" />
                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <local:WidthConverter x:Key="WidthConverter"/>
            <Style x:Key="ColoredComboBox" TargetType="ComboBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid Margin="{TemplateBinding Margin}">
                                <Border 
                                        Padding="{TemplateBinding Padding}"
                                        CornerRadius="2"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}">
                                    <ToggleButton x:Name="ToggleButton" 
                                        Background="Transparent"
                                        BorderThickness = "0"
                                        Grid.Column="2"
                                        Focusable="false"
                                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                        ClickMode="Press"
                                        HorizontalContentAlignment="Right"
                                        IsEnabled="{TemplateBinding IsEnabled}">
                                    <Path x:Name="Arrow" 
                                          HorizontalAlignment="Left" 
                                          VerticalAlignment="Center" Fill="Black" 
                                          Data="M 0 0 L 4 4 L 8 0 Z"/>
                                </ToggleButton>
                                </Border>
                                <Grid Margin="0" HorizontalAlignment="Left">
                                    <Border Padding="{TemplateBinding Padding}">
                                        <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                                    </Border>
                                    <TextBox x:Name="PART_EditableTextBox"
                                         Style="{DynamicResource ComboBoxEditableTextBox}"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"
                                         Background="Transparent"
                                         Padding="{TemplateBinding Padding}" 
                                         Margin="0" 
                                         Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                         Visibility="Hidden" BorderThickness="0"
                                         IsEnabled="{TemplateBinding IsEnabled}"
                                         IsReadOnly="{TemplateBinding IsReadOnly}" >
                                    </TextBox>
                                    <Grid.Width>
                                        <MultiBinding Converter="{StaticResource WidthConverter}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualWidth"/>
                                            <Binding ElementName="Arrow" Path="ActualWidth"/>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Padding"/>
                                        </MultiBinding>
                                    </Grid.Width>
                                </Grid>
                                <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" 
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                    <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                            Background="White"
                                            BorderBrush="Black"
                                            BorderThickness="1"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEditable" Value="True">
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>